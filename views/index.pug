doctype html
head
  title #{title} Question | AwesomeSciBo API
  style
    include styles/style.css
  script(src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous")
  script(src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous")

body
  div.container.w-100
    div.row.mt-3
      div(id="missing-content-alert" role="alert").alert.alert-danger.d-none Hello!
      h5.text-center.mt-1.display-5 #{title} Your Question Here:
      div.mb-3.text-align-center
        form(method=requestInfo.method action=requestInfo.endpoint)
          select(id="category" name="Category" required).form-select.mb-3.mt-3
            option(selected="selected" disabled value="") Select a category
            each category in categories
              option(value=category.name)= category.name
          each category in categories
            select(id=category.name name="Subcategory" required).form-select.my-3
              option(selected="selected" disabled value="") Select a subcategory in #{category.name}
              each subcategory in category.subcategories
                option(value=subcategory id=subcategory)= subcategory
          select(name="Toss-Up Question Format" required)#tossupQuestionFormat.form-select.my-3
            option(selected="selected" disabled value="") Select a toss-up format
            option(value="Short Answer") Short Answer
            option(value="Multiple Choice") Multiple Choice            
          input(type="text" placeholder="Toss-Up Question" name="Toss-Up Question")#tossupQuestion.form-control.my-3
          input(type="text" placeholder="Toss-Up Answer" name="Toss-Up Answer")#tossupAnswer.form-control.my-3
          select(name="Bonus Question Format" required)#bonusQuestionFormat.form-select.my-3
            option(selected="selected" disabled value="") Select a bonus format
            option(value="Short Answer") Short Answer
            option(value="Multiple Choice") Multiple Choice            
          input(type="text" placeholder="Bonus Question" name="Bonus Question" required)#bonusQuestion.form-control.my-3
          input(type="text" placeholder="Bonus Answer" name="Bonus Answer" required)#bonusAnswer.form-control.my-3
          textarea(placeholder="Explanation" name="Explanation").form-control.my-3
          div.input-group.mb-3
            input(type="text" placeholder="API Key" name="API Key" required)#apiKey.form-control
            div.input-group-append
              input(type="submit" value="Submit").btn.btn-secondary
  script.
    const categoryList = !{JSON.stringify(categories)};
    const category = document.getElementById("category");
    
    window.onload = () => {
      if (!{JSON.stringify(questionData)}['Category']) {
        const question = !{JSON.stringify(questionData)};
        let catIndex;
        let subcatIndex;
        
        catIndex = categoryList.findIndex( element => {
          if (element.name === question['Category']) {
            return true;
          }
        });
        
        categoryList.some(cat => {
          if (cat.name === question['Category']) {
            subcatIndex = cat.subcategories.indexOf(question['Subcategory']);
            return true;
          } else {
            return false;
          }
        });
        
        category.selectedIndex = catIndex + 1;
        
        document.getElementById(question['Category']).selectedIndex = subcatIndex + 1;
        
        if (question['Toss-Up Question Format']) {
          if (question['Toss-Up Question Format'] === "Short Answer") {
            document.getElementById('tossupQuestionFormat').selectedIndex = 1;
          } else if (question['Toss-Up Question Format'] === "Multiple Choice") {
            document.getElementById('tossupQuestionFormat').selectedIndex = 2;
          }
        }
        
        if (question['Toss-Up Question']) {
          document.getElementById('tossupQuestion').value = question['Toss-Up Question'];
        }
        
        if (question['Toss-Up Answer']) {
          document.getElementById('tossupAnswer').value = question['Toss-Up Answer'];
        }
        
        if (question['Bonus Question Format']) {
          if (question['Bonus Question Format'] === "Short Answer") {
            document.getElementById('bonusQuestionFormat').selectedIndex = 1;
          } else if (question['Bonus Question Format'] === "Multiple Choice") {
            document.getElementById('bonusQuestionFormat').selectedIndex = 2;
          }
        }
        
        if (question['Bonus Question']) {
          document.getElementById('bonusQuestion').value = question['Bonus Question'];
        }
        
        if (question['Bonus Answer']) {
          document.getElementById('bonusAnswer').value = question['Bonus Answer'];
        }
      }
      
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has("updateNotFound")) {
        if (urlParams.get("updateNotFound")) {
          alert("Unfortunately, we couldn't find the question you were looking to update")
          window.history.replaceState({}, document.title, "/");
        }
      }
      if (urlParams.has("missing")) {
        const missingElements = urlParams.get("missing").split(",").join(", ");
        document.getElementById("missing-content-alert").innerHTML = `<strong>Error!</strong> You were missing these values: <strong>${missingElements}</strong>`;
        document.getElementById("missing-content-alert").classList.remove("d-none");
        document.getElementById("missing-content-alert").classList.add("show");
        window.history.replaceState({}, document.title, "/");
      }
      
      const toggledCategory = document.getElementById(category.value);
      if (!toggledCategory) {
        categoryList.forEach(c => {
          document.getElementById(c.name).classList.remove("d-flex");
          document.getElementById(c.name).classList.remove("d-none");
          document.getElementById(c.name).classList.add("d-none");
          document.getElementById(c.name).disabled = true;
          });
      } else {
        categoryList.forEach(c => {
          if (c.name !== category.value) {
            document.getElementById(c.name).classList.remove("d-flex");
            document.getElementById(c.name).classList.remove("d-none");
            document.getElementById(c.name).classList.add("d-none");
            document.getElementById(c.name).disabled = true;
            toggledCategory.disabled = false;
            toggledCategory.classList.remove("d-flex");
            toggledCategory.classList.remove("d-none");
            toggledCategory.classList.add("d-flex");
          }
        });
      }
    }
    category.onchange = () => {
      const toggledCategory = document.getElementById(category.value);
      toggledCategory.classList.remove("d-flex");
      toggledCategory.classList.remove("d-none");
      toggledCategory.classList.add("d-flex");
      toggledCategory.disabled = false;
      categoryList.forEach(c => {
        if (c.name !== category.value) {
          document.getElementById(c.name).classList.remove("d-flex");
          document.getElementById(c.name).classList.remove("d-none");
          document.getElementById(c.name).classList.add("d-none");
          document.getElementById(c.name).setAttribute("disabled", true);
        }
      });
    }
