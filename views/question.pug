doctype html
include partials/head
include partials/navbar

+head(title + " Question")

body
  +navbar("questions")
  div.container.w-100
    div(id="missing-content-alert" role="alert").alert.alert-danger.d-none Hello!
    h5.text-center.mt-1.display-5 #{title} Your Question Here:
    div.mb-3.text-align-center
      form(method=requestInfo.method action=requestInfo.endpoint)
        select(id="category" name="Category" required).form-select.mb-3.mt-3
          option(selected="selected" disabled value="") Select a category
          each category in categories
            option(value=category.name)= category.name
        each category in categories
          select(id=category.name + " TU" name="Toss-Up Subcategory" required).form-select.my-3
            option(selected="selected" disabled value="") Select a subcategory in #{category.name}
            each subcategory in category.subcategories
              option(value=subcategory id=subcategory)= subcategory
        select(name="Toss-Up Question Format" required)#tossupQuestionFormat.form-select.my-3
          option(selected="selected" disabled value="") Select a toss-up format
          option(value="Short Answer") Short Answer
          option(value="Multiple Choice") Multiple Choice            
        input(type="text" placeholder="Toss-Up Question" name="Toss-Up Question")#tossupQuestion.form-control.my-3
        input(type="text" placeholder="Toss-Up Answer" name="Toss-Up Answer")#tossupAnswer.form-control.my-3
        each category in categories
          select(id=category.name + " B" name="Bonus Subcategory" required).form-select.my-3
            option(selected="selected" disabled value="") Select a subcategory in #{category.name}
            each subcategory in category.subcategories
              option(value=subcategory id=subcategory)= subcategory
        select(name="Bonus Question Format" required)#bonusQuestionFormat.form-select.my-3
          option(selected="selected" disabled value="") Select a bonus format
          option(value="Short Answer") Short Answer
          option(value="Multiple Choice") Multiple Choice            
        input(type="text" placeholder="Bonus Question" name="Bonus Question" required)#bonusQuestion.form-control.my-3
        input(type="text" placeholder="Bonus Answer" name="Bonus Answer" required)#bonusAnswer.form-control.my-3
        textarea(placeholder="Explanation (not required)" name="Explanation")#explanation.form-control.my-3
        input(type="text" placeholder="Source" name="Source" required)#source.form-control.my-3
        input(type="text" placeholder="Round (not required)" name="Round")#source.form-control.my-3
        div.input-group.mb-3
          input(type="text" placeholder="API Key" name="API Key" required)#apiKey.form-control
          div.input-group-append
            input(type="submit" value="Submit").btn.btn-outline-primary
  script.
    const categoryList = !{JSON.stringify(categories)};
    const category = document.getElementById("category");
    
    window.onload = () => {
      if (!{JSON.stringify(questionData)}['Category']) {
        const question = !{JSON.stringify(questionData)};
        let catIndex;
        let subcatIndex;
        
        catIndex = categoryList.findIndex( element => {
          if (element.name === question['Category']) {
            return true;
          }
        });
        
        categoryList.some(cat => {
          if (cat.name === question['Category']) {
            subcatIndex = cat.subcategories.indexOf(question['Subcategory']);
            return true;
          } else {
            return false;
          }
        });
        
        category.selectedIndex = catIndex + 1;
        
        document.getElementById(question['Category']).selectedIndex = subcatIndex + 1;
        
        if (question['Toss-Up Question Format']) {
          if (question['Toss-Up Question Format'] === "Short Answer") {
            document.getElementById('tossupQuestionFormat').selectedIndex = 1;
          } else if (question['Toss-Up Question Format'] === "Multiple Choice") {
            document.getElementById('tossupQuestionFormat').selectedIndex = 2;
          }
        }
        
        if (question['Toss-Up Question']) {
          document.getElementById('tossupQuestion').value = question['Toss-Up Question'];
        }
        
        if (question['Toss-Up Answer']) {
          document.getElementById('tossupAnswer').value = question['Toss-Up Answer'];
        }
        
        if (question['Bonus Question Format']) {
          if (question['Bonus Question Format'] === "Short Answer") {
            document.getElementById('bonusQuestionFormat').selectedIndex = 1;
          } else if (question['Bonus Question Format'] === "Multiple Choice") {
            document.getElementById('bonusQuestionFormat').selectedIndex = 2;
          }
        }
        
        if (question['Bonus Question']) {
          document.getElementById('bonusQuestion').value = question['Bonus Question'];
        }
        
        if (question['Bonus Answer']) {
          document.getElementById('bonusAnswer').value = question['Bonus Answer'];
        }
        
        if (question['Explanation']) {
          document.getElementById('explanation').value = question['Explanation'];
        }
        
        if (question['Source']) {
          document.getElementById('source').value = question['Source'];
        }
      }
      
      const urlParams = new URLSearchParams(window.location.search);
      if (urlParams.has("updateNotFound")) {
        if (urlParams.get("updateNotFound")) {
          alert("Unfortunately, we couldn't find the question you were looking to update")
          window.history.replaceState({}, document.title, "/");
        }
      }
      if (urlParams.has("missing")) {
        const missingElements = urlParams.get("missing").split(",").join(", ");
        document.getElementById("missing-content-alert").innerHTML = `<strong>Error!</strong> You were missing these values: <strong>${missingElements}</strong>`;
        document.getElementById("missing-content-alert").classList.remove("d-none");
        document.getElementById("missing-content-alert").classList.add("show");
        window.history.replaceState({}, document.title, "/");
      }
      
      const toggledCategoryTU = document.getElementById(category.value + " TU");
      if (!toggledCategoryTU) {
        categoryList.forEach(c => {
          document.getElementById(c.name + " TU").classList.remove("d-flex");
          document.getElementById(c.name + " TU").classList.remove("d-none");
          document.getElementById(c.name + " TU").classList.add("d-none");
          document.getElementById(c.name + " TU").disabled = true;
          });
      } else {
        categoryList.forEach(c => {
          if (c.name + " TU" !== category.value + " TU") {
            document.getElementById(c.name + " TU").classList.remove("d-flex");
            document.getElementById(c.name + " TU").classList.remove("d-none");
            document.getElementById(c.name + " TU").classList.add("d-none");
            document.getElementById(c.name + " TU").disabled = true;
            toggledCategoryTU.disabled = false;
            toggledCategoryTU.classList.remove("d-flex");
            toggledCategoryTU.classList.remove("d-none");
            toggledCategoryTU.classList.add("d-flex");
          }
        });
      }
      
      const toggledCategoryB = document.getElementById(category.value + " B");
      if (!toggledCategoryB) {
        categoryList.forEach(c => {
          document.getElementById(c.name + " B").classList.remove("d-flex");
          document.getElementById(c.name + " B").classList.remove("d-none");
          document.getElementById(c.name + " B").classList.add("d-none");
          document.getElementById(c.name + " B").disabled = true;
          });
      } else {
        categoryList.forEach(c => {
          if (c.name + " B" !== category.value + " B") {
            document.getElementById(c.name + " B").classList.remove("d-flex");
            document.getElementById(c.name + " B").classList.remove("d-none");
            document.getElementById(c.name + " B").classList.add("d-none");
            document.getElementById(c.name + " B").disabled = true;
            toggledCategoryTU.disabled = false;
            toggledCategoryTU.classList.remove("d-flex");
            toggledCategoryTU.classList.remove("d-none");
            toggledCategoryTU.classList.add("d-flex");
          }
        });
      }
    }
    category.onchange = () => {
      const toggledCategoryTU = document.getElementById(category.value + " TU");
      toggledCategoryTU.classList.remove("d-flex");
      toggledCategoryTU.classList.remove("d-none");
      toggledCategoryTU.classList.add("d-flex");
      toggledCategoryTU.disabled = false;
      categoryList.forEach(c => {
        if (c.name + " TU" !== category.value + " TU") {
          document.getElementById(c.name + " TU").classList.remove("d-flex");
          document.getElementById(c.name + " TU").classList.remove("d-none");
          document.getElementById(c.name + " TU").classList.add("d-none");
          document.getElementById(c.name + " TU").setAttribute("disabled", true);
        }
      });
      
      const toggledCategoryB = document.getElementById(category.value + " B");
      toggledCategoryB.classList.remove("d-flex");
      toggledCategoryB.classList.remove("d-none");
      toggledCategoryB.classList.add("d-flex");
      toggledCategoryB.disabled = false;
      categoryList.forEach(c => {
        if (c.name + " B" !== category.value + " B") {
          document.getElementById(c.name + " B").classList.remove("d-flex");
          document.getElementById(c.name + " B").classList.remove("d-none");
          document.getElementById(c.name + " B").classList.add("d-none");
          document.getElementById(c.name + " B").setAttribute("disabled", true);
        }
      });
    }
